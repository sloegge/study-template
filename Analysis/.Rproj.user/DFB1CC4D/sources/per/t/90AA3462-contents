---
title: "Quarto Template"
author: "Blinded for review"
toc: true
toc-depth: 5
toc-title: Contents
number-sections: true
execute:
  cache: true
  echo: true
format:
  html: 
    link-external-icon: true
    link-external-newwindow: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
    embed-resources: true
    self-contained-math: true
---

# Main Title

## Setup

### Packages
```{r}
#| echo: true
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: "Show the code"
#| cache: false

# Load packages
packages <- c("renv", "quarto", "tidyverse", "ggplot2", "here", "readr", "labelled")

for (pkg in packages) {
  if (!requireNamespace(pkg, quietly = TRUE)) install.packages(pkg)
  library(pkg, character.only = TRUE)
}

renv::init() # Initialize renv (use renv::restore() to reproduce the analysis and restore the project environment)
library(renv)
#renv::activate() # optional (manual)

library(quarto)
library(tidyverse)
library(ggplot2)
library(readr)
library(here) # use here to navigate within the project's subfolders
library(labelled)
library(scales)
library(dplyr)
```

### Load Data
```{r}
#| echo: true
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: "Show the code"
#| cache: false

pilot_data <- read.csv("Data/JRP Confidence Pilot _Final_February 14, 2025_03.03.csv", header = F)
pilot_data <- pilot_data[-3, ]

questions <- as.character(pilot_data[2, ])  # Questions (2nd row)
var_names <- as.character(pilot_data[1, ])  # Variable names (1st row)

pilot_data <- pilot_data[-c(1, 2), ]

colnames(pilot_data) <- stringr::str_to_lower(var_names)
pilot_data <- labelled::set_variable_labels(pilot_data, .labels = setNames(questions, colnames(pilot_data)))

pilot_data <- as.data.frame(lapply(pilot_data, function(col) {
  converted_col <- type.convert(as.character(col), as.is = TRUE)
  labelled::set_variable_labels(converted_col, .labels = attr(col, "label"))
}))

# data cleaning

pilot_data <- pilot_data[-1, ] # Test answer from confederate

pilot_data <- pilot_data[pilot_data$q_recaptchascore >= 0.5, ] # removes 2 rows (Indicates a high probability to not be a human answer)

pilot_data <- pilot_data[pilot_data$q_relevantidfraudscore < 30, ] # removes 2 rows (Indicates a high probability to not be a human answer)

pilot_data <- pilot_data[pilot_data$q_relevantidduplicatescore == 0, ] # 0 = low probability of duplicate

# Consent
pilot_data <- pilot_data[!is.na(pilot_data$consent) & pilot_data$consent == 1, ] # all participants gave consent

# Attention Check
pilot_data <- pilot_data[pilot_data$att1 == 2, ] # 3 participants removed for failing the attention check

```

### Prepare Data for analysis (and osf)
```{r}
#| echo: true
#| warning: false
#| output: false
#| code-fold: true
#| code-summary: "Show the code"
#| cache: false

colnames(pilot_data)

pilot_data_clean <- pilot_data %>%  select(consent, att1, duration..in.seconds., t1_relative_1, t1_absolut_1, t2_relative_1, t2_absolute_1, sc0, f1:f16, r1:r16, news_consumption, age, gender, education)

pilot_data_clean <- pilot_data_clean %>% mutate(ID = row_number())

# Export for OSF
## write.csv(pilot_data_clean, here("Data", "pilot2_osf_20250214.csv"), row.names = FALSE)
```

# Analysis

## Descriptive analysis